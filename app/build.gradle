apply plugin: "com.android.application"

apply plugin: "kotlin-android"

apply plugin: "kotlin-android-extensions"

apply plugin: "kotlin-kapt"

// Adds SafeArgs for nav graphs
apply plugin: "androidx.navigation.safeargs.kotlin"

/*
 * Versioning
 */
ext.minimumSdkVersion = 15 // 2 digits
ext.versionMajor = 1 // 2 digits
ext.versionMinor = 2 // 2 digits
ext.versionPatch = 0 // 2 digits
ext.extraInfo = 0 // 1 digit (currently unused)
ext.versionClassifier = null // Extra info to be appended to version name e.g. alpha (used for version name)
ext.isSnapshot = false // Will append SNAPSHOT to version name

@SuppressWarnings('GrMethodMayBeStatic')
private Integer generateVersionCode() {
    // There is one digit spare between min sdk and major version
    return ext.minimumSdkVersion * 10000000 + ext.extraInfo * 1000000 + ext.versionMajor * 10000 + ext.versionMinor * 100 + ext.versionPatch
}

@SuppressWarnings('GrMethodMayBeStatic')
private String generateVersionName() {
    String versionName = "${ext.versionMajor}.${ext.versionMinor}.${ext.versionPatch}"
    if (ext.versionClassifier == null && ext.isSnapshot) {
        ext.versionClassifier = "SNAPSHOT"
    }

    if (ext.versionClassifier != null) {
        versionName += "-" + ext.versionClassifier
    }
    return versionName
}

android {
    compileSdkVersion 30
    defaultConfig {
        applicationId "eywa.projectcodex"
        minSdkVersion project.ext.minimumSdkVersion
        targetSdkVersion 30
        versionCode generateVersionCode()
        versionName generateVersionName()
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        multiDexEnabled true

        // These two sections allow exporting of the database schemas
        // which allows old versions of the database to be created for testing purposes
        javaCompileOptions {
            annotationProcessorOptions {
                arguments = ["room.schemaLocation": "$projectDir/schemas".toString()]
            }
        }
        sourceSets {
            androidTest.assets.srcDirs += files("$projectDir/schemas".toString())
            androidTest {
                java.srcDirs += "src/sharedTest/java"
            }
            test {
                java.srcDirs += "src/sharedTest/java"
            }
        }
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile("proguard-android-optimize.txt"), "proguard-rules.pro"
        }
    }
    packagingOptions {
        exclude "META-INF/atomicfu.kotlin_module"
    }

    compileOptions {
        def javaVersion = JavaVersion.VERSION_16
        sourceCompatibility = setSourceCompatibility(javaVersion)
        targetCompatibility = setTargetCompatibility(javaVersion)
    }

    kotlinOptions {
        jvmTarget = "1.8"
    }
    testOptions {
        unitTests {
            includeAndroidResources = true
        }
    }
    sourceSets {
        main {
            res {
                srcDirs 'src/main/res', 'src/main/res/fragments/inputEnd',
                        'src/main/res/fragments/general', 'src/main/res/launcherAssets',
                        'src/main/res/tableView', 'src/main/res/iconAssets', 'src/main/res/strings',
                        'src/main/res/prototyping'
            }
        }
    }
}

kapt {
    correctErrorTypes = true
    generateStubs = true
}

dependencies {
    implementation fileTree(dir: "libs", include: ["*.jar"])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation "androidx.appcompat:appcompat:1.3.0"
    implementation "androidx.constraintlayout:constraintlayout:2.0.4"
    implementation "androidx.legacy:legacy-support-v4:1.0.0"
    testImplementation "junit:junit:4.13"

    // Testing
    def android_test_version = "1.3.0"
    androidTestImplementation "androidx.test.ext:junit:1.1.2"
    androidTestImplementation "androidx.test.espresso:espresso-core:3.3.0"
    androidTestImplementation "androidx.test:runner:$android_test_version"
    androidTestImplementation "androidx.test:rules:$android_test_version"
    implementation "com.xfinity:resourceprovider-library:1.2.1"
    kapt "com.xfinity:resourceprovider-compiler:1.2.1"
    testImplementation "com.xfinity:resourceprovider-testutils:1.2.1"
    def mockito_version = "3.8.0"
    implementation("org.mockito:mockito-core:$mockito_version")
    androidTestImplementation "org.mockito:mockito-android:$mockito_version"

    def archTestingVersion = "2.1.0"
    testImplementation "androidx.arch.core:core-testing:$archTestingVersion"
    androidTestImplementation "androidx.arch.core:core-testing:$archTestingVersion"

    // Database components
    def androidRoomVersion = "2.3.0"
    implementation "androidx.room:room-runtime:$androidRoomVersion"
    implementation "androidx.room:room-ktx:$androidRoomVersion"
    kapt "androidx.room:room-compiler:$androidRoomVersion"
    androidTestImplementation "androidx.room:room-testing:$androidRoomVersion"

    // Lifecycle components
    implementation "androidx.lifecycle:lifecycle-extensions:2.2.0"
    kapt "androidx.lifecycle:lifecycle-compiler:2.4.0-alpha01"
    androidTestImplementation "androidx.arch.core:core-testing:2.1.0"

    // ViewModel Kotlin support
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:2.4.0-alpha01"

    // Coroutines
    api "org.jetbrains.kotlinx:kotlinx-coroutines-android:1.4.1"

    // UI
    implementation "com.google.android.material:material:1.3.0"

    // Nav Graph
    def nav_version = "2.3.5"
    implementation "androidx.navigation:navigation-fragment-ktx:$nav_version"
    implementation "androidx.navigation:navigation-ui-ktx:$nav_version"
    androidTestImplementation "androidx.navigation:navigation-testing:$nav_version"

    // Testing Fragments
    def fragment_version = "1.3.4"
    debugImplementation "androidx.fragment:fragment-testing:$fragment_version"
    implementation "androidx.fragment:fragment-ktx:$fragment_version"
    implementation "androidx.test:core:$android_test_version"
    implementation "androidx.test:rules:$android_test_version"
    implementation "androidx.test:runner:$android_test_version"

    // Table view for the score pad
    implementation 'com.evrencoskun.library:tableview:0.8.9'

    // Espresso testing wait conditions
    androidTestImplementation 'com.azimolabs.conditionwatcher:conditionwatcher:0.2'

    // JSON Parsing
    implementation 'com.beust:klaxon:5.0.1'

    // Source: https://stackoverflow.com/a/60311131
    implementation 'com.android.support:multidex:1.0.3'

    implementation 'com.github.deano2390:MaterialShowcaseView:1.3.4' // Highlighting UI elements to the user
    implementation "androidx.core:core-ktx:1.5.0"
}

allprojects {
    configurations.all {
        resolutionStrategy.force 'org.objenesis:objenesis:2.6' // Source: https://stackoverflow.com/a/64181442
    }
}
